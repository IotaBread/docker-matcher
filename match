#!/usr/bin/env bash
set -e
if [[ $# < 2 ]]; then
    echo "Usage: $0 <old version> <new version>"
    exit 1
fi

function info {
    echo -e "\033[32m  [i] $1\033[0m"
}

function error {
    echo -e "\033[91m  [X] $1\033[0m"
}

git_config=$PWD/.gitconfig
EDITOR=/bin/cat git config --global --edit > $git_config
export GIT_CONFIG_GLOBAL=$git_config

git_config_override=${git_config}.override
if [[ -f $git_config_override ]]; then
    cat $git_config_override >> $git_config
fi

cat <<EOF >> $git_config
[safe]
	directory = $PWD/qm/$2
EOF

function cleanup {
    info "Aborting..."
    docker compose down
    exit
}

info "Building matcher image"
docker compose build deno

info "Starting containers"
docker compose up -d
# Cleanup the containers on SIGINT
trap cleanup SIGINT

info "Running setup task"
docker compose exec deno deno task setup $1 $2
info "$ chmod -R a+u qm/$2/.git"
docker compose exec deno chmod -R a+u qm/$2/.git
info "Setup done"

# Allow buildscript changes
info "Press Enter if you want to make any changes to the buildscript. Otherwise wait 5 seconds"
if [ $(read -t 5)$? == 0 ]; then
    info "Press Enter once you have finished the buildscript changes..."
    read
fi

info "Continuing normal execution..."

info "Mapping old version jar"
docker compose exec -w /app/qm/$1 gradle sh -c "gradle mapPerVersionMappingsJar --stacktrace"
info "Mapping new version jar"
docker compose exec -w /app/qm/$2 gradle sh -c "gradle mapPerVersionMappingsJar --stacktrace"
info "Dropping invalid mappings"
docker compose exec -w /app/qm/$2 gradle sh -c "gradle dropInvalidMappings --stacktrace"
info "Commiting changes"
git -C qm/$2 add . && git -C qm/$2 commit -m "$2"

info "Testing ssh connection"
https_url=$(git -C "qm/$2" remote get-url origin)
host=$(echo "$https_url" | sed 's/https\?:\/\/\([^\/]*\)\//\1/' )
if [ $(ssh -T "git@$host" > /dev/null 2>&1)$? == 1 ]; then
    info "Changing the remote urls to use ssh"
    url=$(echo "$https_url" | sed 's/https\?:\/\/\([^\/]*\)\//git@\1:/')
    git -C "qm/$2" remote set-url origin "$url"
fi

info "Matching"
docker compose exec deno deno task match $1 $2
info "Dropping new invalid mappings, generating package info mappings"
docker compose exec -w /app/qm/$2 gradle sh -c "gradle dropInvalidMappings generatePackageInfoMappings --stacktrace"
info "Building mappings and javadoc"
docker compose exec -w /app/qm/$2 gradle sh -c "gradle build javadoc --stacktrace"\
    || (error "Build errors detected, please fix them\n\
        Then run 'git add .', 'git commit -m \"match $2 to $1\"', and 'git push origin $2' from qm/$2\n\
        You might need to set GIT_CONFIG_GLOBAL to \"$git_config\" in the current session if there is a warning about ownership" && exit 1)
info "Committing matched changes"
git -C qm/$2 add . && git -C qm/$2 commit -m "match $2 to $1" || info "No changes commited"
info "Stopping containers"
docker compose stop

echo "====="
info "Everything done, please check the changes and run 'git push origin $2' from qm/$2"
